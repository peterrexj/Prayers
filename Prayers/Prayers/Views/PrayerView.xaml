<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Prayers.Views.PrayerView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:Prayers.Converters"
    xmlns:fontAwesome="clr-namespace:FontAwesome"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:magic="clr-namespace:MagicGradients;assembly=MagicGradients"
    xmlns:progressBar="clr-namespace:Syncfusion.XForms.ProgressBar;assembly=Syncfusion.SfProgressBar.XForms"
    xmlns:sfButtons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
    xmlns:syncEffectsView="clr-namespace:Syncfusion.XForms.EffectsView;assembly=Syncfusion.Core.XForms"
    ios:Page.UseSafeArea="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:StringToColorConverter x:Key="stringToColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid IsEnabled="{Binding IsFree}">
            <magic:GradientView GradientSource="{Binding DefaultStyle.DefaultMgPageBgSource}" VerticalOptions="FillAndExpand" />
            <StackLayout>
                <Grid Margin="{OnPlatform Android={OnIdiom Phone='0,0,0,15', Tablet='0,0,0,15'}, iOS={OnIdiom Phone='0,50,0,15', Tablet='0,50,0,15'}, UWP='0,2,0,10'}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="35" />
                        <RowDefinition Height="4" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <Image
                        Grid.RowSpan="5"
                        Grid.Column="0"
                        Margin="10,3,0,0"
                        Aspect="AspectFit"
                        Source="{Binding PathToMainImage}" />

                    <progressBar:SfStepProgressBar
                        x:Name="stepProgress"
                        Grid.Row="1"
                        Grid.Column="2"
                        Margin="0,0,5,0"
                        BindableLayout.ItemsSource="{Binding ProgressInformation}"
                        HorizontalOptions="CenterAndExpand"
                        Orientation="Horizontal"
                        ProgressAnimationDuration="0"
                        StepViewTappedCommand="{Binding progressTappedCommand}"
                        TitleAlignment="Start"
                        VerticalOptions="CenterAndExpand">
                        <progressBar:SfStepProgressBar.NotStartedStepStyle>
                            <progressBar:StepStyle
                                x:TypeArguments="progressBar:NotStartedStepState"
                                MarkerContentSize="{OnPlatform Android={OnIdiom Phone='13',
                                                                                Tablet='20'},
                                                               iOS={OnIdiom Phone='13',
                                                                            Tablet='20'}, UWP='20'}"
                                MarkerShapeType="Circle"
                                MarkerSize="{OnPlatform Android={OnIdiom Phone='20',
                                                                         Tablet='30'},
                                                        iOS={OnIdiom Phone='20',
                                                                     Tablet='30'}, UWP='30'}"
                                TrackColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarTrackColor, Converter={StaticResource stringToColorConverter}}" />
                        </progressBar:SfStepProgressBar.NotStartedStepStyle>

                        <progressBar:SfStepProgressBar.InProgressStepStyle>
                            <progressBar:StepStyle
                                x:TypeArguments="progressBar:InProgressStepState"
                                MarkerContentSize="{OnPlatform Android={OnIdiom Phone='13',
                                                                                Tablet='20'},
                                                               iOS={OnIdiom Phone='13',
                                                                            Tablet='20'}, UWP='20'}"
                                MarkerFillColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarInProgressMarkerFillColor, Converter={StaticResource stringToColorConverter}}"
                                MarkerShapeType="Circle"
                                MarkerSize="{OnPlatform Android={OnIdiom Phone='20',
                                                                         Tablet='30'},
                                                        iOS={OnIdiom Phone='20',
                                                                     Tablet='30'}, UWP='30'}"
                                MarkerStrokeColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarInProgressMarkerStrokeColor, Converter={StaticResource stringToColorConverter}}"
                                MarkerStrokeWidth="1"
                                TrackColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarTrackColor, Converter={StaticResource stringToColorConverter}}" />
                        </progressBar:SfStepProgressBar.InProgressStepStyle>

                        <progressBar:SfStepProgressBar.CompletedStepStyle>
                            <progressBar:StepStyle
                                x:TypeArguments="progressBar:CompletedStepState"
                                MarkerContentSize="{OnPlatform Android={OnIdiom Phone='13',
                                                                                Tablet='20'},
                                                               iOS={OnIdiom Phone='13',
                                                                            Tablet='20'}, UWP='20'}"
                                MarkerFillColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarCompletedBgColor, Converter={StaticResource stringToColorConverter}}"
                                MarkerShapeType="Circle"
                                MarkerSize="{OnPlatform Android={OnIdiom Phone='20',
                                                                         Tablet='30'},
                                                        iOS={OnIdiom Phone='20',
                                                                     Tablet='30'},UWP='30'}"
                                ProgressLineColor="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarTrackColor, Converter={StaticResource stringToColorConverter}}" />
                        </progressBar:SfStepProgressBar.CompletedStepStyle>
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <progressBar:StepView
                                    x:Name="stepView"
                                    ProgressValue="{Binding ProgressValue}"
                                    Status="{Binding Status}">
                                    <progressBar:StepView.ImageSource>
                                        <FontImageSource
                                            FontFamily="FontAwesome5Solid"
                                            Glyph="{x:Static fontAwesome:FontAwesomeIcons.Pray}"
                                            Color="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.DefaultStyle.ProgressBarIconMainBgColor, Converter={StaticResource stringToColorConverter}}" />
                                    </progressBar:StepView.ImageSource>
                                </progressBar:StepView>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </progressBar:SfStepProgressBar>

                    <Grid
                        Grid.Row="2"
                        Grid.Column="2"
                        HorizontalOptions="CenterAndExpand">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="14*" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>
                        <sfButtons:SfButton
                            Grid.Column="0"
                            BackgroundColor="Transparent"
                            Command="{Binding goHome}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Home}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>

                        <sfButtons:SfButton
                            Grid.Column="1"
                            BackgroundColor="Transparent"
                            Command="{Binding changeTheme}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Sun}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>

                        <sfButtons:SfButton
                            Grid.Column="3"
                            BackgroundColor="Transparent"
                            Command="{Binding playAudio}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Play}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>

                        <sfButtons:SfButton
                            Grid.Column="4"
                            BackgroundColor="Transparent"
                            Command="{Binding pauseAudio}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Pause}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>
                        <sfButtons:SfButton
                            Grid.Column="5"
                            BackgroundColor="Transparent"
                            Command="{Binding stopAudio}"
                            CornerRadius="0">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Stop}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>

                        <sfButtons:SfButton
                            Grid.Column="7"
                            BackgroundColor="Transparent"
                            Command="{Binding increaseFont}"
                            CornerRadius="40"
                            IsEnabled="{Binding IsFree}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Plus}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>
                        <sfButtons:SfButton
                            Grid.Column="8"
                            BackgroundColor="Transparent"
                            Command="{Binding decreaseFont}"
                            CornerRadius="40"
                            IsEnabled="{Binding IsFree}">
                            <Image>
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FontAwesome5Solid"
                                        Glyph="{x:Static fontAwesome:FontAwesomeIcons.Minus}"
                                        Color="{Binding DefaultStyle.ThemeButtonBgColor, Converter={StaticResource stringToColorConverter}}" />
                                </Image.Source>
                            </Image>
                        </sfButtons:SfButton>
                    </Grid>

                    <Grid Grid.Row="4" Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="5" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                        <syncEffectsView:SfEffectsView
                            Grid.Row="0"
                            Grid.Column="1"
                            BackgroundColor="{Binding DefaultStyle.ButtonBgColor, Converter={StaticResource stringToColorConverter}}"
                            CornerRadius="5"
                            FadeOutRipple="True"
                            IsVisible="{Binding CanGoPrevious}"
                            RippleAnimationDuration="500"
                            TouchUpCommand="{Binding btnGoPreviousCommand}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label
                                    Grid.Column="2"
                                    Margin="0,0,10,0"
                                    FontAttributes="Bold"
                                    FontSize="Medium"
                                    HorizontalOptions="Center"
                                    Text="Back"
                                    TextColor="{Binding DefaultStyle.ButtonFgColor, Converter={StaticResource stringToColorConverter}}"
                                    VerticalOptions="Center" />
                                <sfButtons:SfButton
                                    Grid.Column="1"
                                    BackgroundColor="{Binding DefaultStyle.ButtonBgColor, Converter={StaticResource stringToColorConverter}}"
                                    Command="{Binding btnGoPreviousCommand}"
                                    CornerRadius="30"
                                    HeightRequest="{OnPlatform Android={OnIdiom Phone='25',
                                                                                Tablet='25'},
                                                               iOS={OnIdiom Phone='25',
                                                                            Tablet='25'},
                                                               UWP='30'}"
                                    VerticalOptions="Center"
                                    WidthRequest="{OnPlatform Android={OnIdiom Phone='30',
                                                                               Tablet='30'},
                                                              iOS={OnIdiom Phone='30',
                                                                           Tablet='30'},
                                                              UWP='30'}">
                                    <Image>
                                        <Image.Source>
                                            <FontImageSource
                                                FontFamily="FontAwesome5Solid"
                                                Glyph="{x:Static fontAwesome:FontAwesomeIcons.ArrowAltCircleLeft}"
                                                Color="{Binding DefaultStyle.ButtonFgColor, Converter={StaticResource stringToColorConverter}}" />
                                        </Image.Source>
                                    </Image>
                                </sfButtons:SfButton>
                            </Grid>
                        </syncEffectsView:SfEffectsView>
                        <syncEffectsView:SfEffectsView
                            Grid.Row="0"
                            Grid.Column="2"
                            BackgroundColor="{Binding DefaultStyle.ButtonBgColor, Converter={StaticResource stringToColorConverter}}"
                            CornerRadius="5"
                            FadeOutRipple="True"
                            IsVisible="{Binding CanGoNext}"
                            RippleAnimationDuration="500"
                            TouchUpCommand="{Binding btnGoNextCommand}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="10" />
                                </Grid.ColumnDefinitions>
                                <Label
                                    Grid.Column="0"
                                    Margin="10,0,0,0"
                                    FontAttributes="Bold"
                                    FontSize="Medium"
                                    HorizontalOptions="Center"
                                    IsEnabled="{Binding IsFree}"
                                    Text="Next"
                                    TextColor="{Binding DefaultStyle.ButtonFgColor, Converter={StaticResource stringToColorConverter}}"
                                    VerticalOptions="Center" />

                                <sfButtons:SfButton
                                    Grid.Column="1"
                                    BackgroundColor="{Binding DefaultStyle.ButtonBgColor, Converter={StaticResource stringToColorConverter}}"
                                    Command="{Binding btnGoNextCommand}"
                                    CornerRadius="30"
                                    HeightRequest="{OnPlatform Android={OnIdiom Phone='25',
                                                                                Tablet='25'},
                                                               iOS={OnIdiom Phone='25',
                                                                            Tablet='25'},
                                                               UWP='30'}"
                                    IsEnabled="{Binding IsFree}"
                                    VerticalOptions="Center"
                                    WidthRequest="{OnPlatform Android={OnIdiom Phone='30',
                                                                               Tablet='30'},
                                                              iOS={OnIdiom Phone='30',
                                                                           Tablet='30'},
                                                              UWP='30'}">
                                    <Image>
                                        <Image.Source>
                                            <FontImageSource
                                                FontFamily="FontAwesome5Solid"
                                                Glyph="{x:Static fontAwesome:FontAwesomeIcons.ArrowAltCircleRight}"
                                                Color="{Binding DefaultStyle.ButtonFgColor, Converter={StaticResource stringToColorConverter}}" />
                                        </Image.Source>
                                    </Image>
                                </sfButtons:SfButton>
                            </Grid>
                        </syncEffectsView:SfEffectsView>
                    </Grid>
                </Grid>

                <StackLayout>
                    <ScrollView>
                        <StackLayout x:Name="contentStack" Padding="0,0,0,30" />
                    </ScrollView>
                </StackLayout>
            </StackLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>